import{_ as n,o as s,c as a,e as t}from"./app.bb973a4f.js";const p={},e=t(`<h1 id="\u7528\u6237\u767B\u5F55" tabindex="-1"><a class="header-anchor" href="#\u7528\u6237\u767B\u5F55" aria-hidden="true">#</a> \u7528\u6237\u767B\u5F55</h1><p>\u7528\u6237\u767B\u5F55\u53EF\u4EE5\u8BF4\u662F\u6700\u5E38\u89C1\u7684\u4E00\u79CD\u4E1A\u52A1\u4E86\uFF0C\u5B9E\u9645\u4E0A\u5C31\u662F\u5BA2\u6237\u7AEF\u53D1\u9001\u8BF7\u6C42\uFF0C\u544A\u8BC9\u670D\u52A1\u7AEF\u6211\u662F\u8C01\uFF0C\u4E00\u822C\u57FA\u4E8E\u7528\u6237\u8BA4\u8BC1\u7684\u65B9\u5F0F\u6709\u4E24\u79CD\uFF0C\u4E00\u79CD\u662F\u57FA\u4E8E<code>session</code>\uFF0C\u4E00\u79CD\u662F\u57FA\u4E8E<code>token</code></p><p>\u4E00\u822C\u7F51\u7AD9\u7684\u767B\u5F55\u529F\u80FD\u90FD\u662F\u57FA\u4E8EToken\u5B9E\u73B0\u7684\uFF0Ctoken\u4E2D\u4E5F\u6709\u4E0D\u540C\u7684\u65B9\u5F0F\uFF0C\u6709\u5355token\u6A21\u5F0F\uFF0C\u6709\u53CCtoken\u6A21\u5F0F</p><p>\u800Ctoken\u4E5F\u5206\u4E24\u79CD\u4E0D\u540C\u7684token\uFF0CAccess Token\u548Crefresh Token\uFF0C\u53EF\u4EE5\u53EA\u7528accesstoken\uFF0C\u4E5F\u53EF\u4EE5\u4E24\u79CD\u65B9\u5F0F\u7ED3\u5408\u4F7F\u7528\uFF0C<code>accessToken</code>\u7528\u6765\u771F\u6B63\u83B7\u53D6\u6743\u9650\uFF0C\u800C<code>refreshToken</code>\u7528\u6765\u83B7\u53D6<code>AccessToken</code>\uFF0C\u8FD9\u5C31\u662F<strong>\u53CCToken\u6A21\u5F0F</strong></p><h2 id="\u53CCtoken" tabindex="-1"><a class="header-anchor" href="#\u53CCtoken" aria-hidden="true">#</a> \u53CCToken</h2><p>token\u7684\u76EE\u7684\u662F\u4E3A\u4E86\u9632\u6B62\u7528\u6237\u4FE1\u606F\u4F20\u9012\u95F4\u88AB\u52AB\u6301\uFF0C\u4F46\u662F\u5982\u679Ctoken\u6CA1\u6709\u8FC7\u671F\u65F6\u95F4\u6216\u8005\u8FC7\u671F\u65F6\u95F4\u5F88\u957F\uFF0C\u90A3\u4E48\u663E\u7136token\u88AB\u52AB\u6301\u8FD8\u662F\u4E0D\u5B89\u5168\u7684\uFF0Ctoken\u4E5F\u5931\u53BB\u4E86\u610F\u4E49</p><p>\u4F46\u662F\u8BBE\u7F6Etoken\u8FC7\u671F\u65F6\u95F4\u8FC7\u77ED\u7684\u65B9\u6848\u662F\u4F1A\u5F71\u54CD\u5230\u7528\u6237\u4F53\u9A8C\u7684\uFF0C\u56E0\u4E3A\u8FC7\u671F\u5C31\u610F\u5473\u7740\u9700\u8981\u91CD\u65B0\u767B\u5F55\uFF0C\u90A3\u4E48\u4EC0\u4E48\u60C5\u51B5\u4E0B\u9700\u8981\u7528\u6237\u91CD\u65B0\u767B\u5F55\uFF1F\uFF1A</p><ul><li>\u7528\u6237\u957F\u65F6\u95F4\u65E0\u64CD\u4F5C\uFF0C\u4E5F\u53EF\u4EE5\u5B9A\u4E49\u672A\u4E0D\u6D3B\u8DC3\u7528\u6237\uFF0C\u5C31\u4F1A\u88AB\u81EA\u52A8\u8E22\u4E0B\uFF0C\u81EA\u52A8\u91CD\u5B9A\u5411\u5230\u767B\u5F55\u9875\u9762\uFF0C\u8D85\u65F6\u65F6\u95F4\u53EF\u4EE5\u81EA\u5B9A\u4E49\u8BBE\u7F6E\uFF1B</li><li>token\u5931\u6548\uFF0C\u901A\u5E38\u662F\u53CCtoken\u90FD\u5931\u6548\u540E\uFF0C\u4F1A\u8981\u6C42\u91CD\u65B0\u767B\u5F55\u83B7\u53D6\u65B0\u7684\u53CCtoken</li><li>\u5F53\u68C0\u6D4B\u5230\u6709\u98CE\u9669\u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u8981\u6C42\u91CD\u65B0\u767B\u5F55\uFF0C\u83B7\u53D6token</li></ul><p>\u53CCtoken\u7684\u8BBE\u8BA1\u5C31\u662F\u5F53\u4E24\u4E2Atoken\u90FD\u8FC7\u671F\u4E86\u518D\u8981\u6C42\u7528\u6237\u91CD\u65B0\u767B\u5F55\uFF0C\u5BF9\u4E8ErefreshToken\u800C\u8A00\u53EA\u662F\u7528\u6765\u83B7\u53D6accessToken\u7684\uFF0C\u6240\u4EE5\u5B83\u4E0D\u4F1A\u88AB\u9891\u7E41\u8BF7\u6C42\uFF0C\u5B83\u7684\u8FC7\u671F\u65F6\u95F4\u4F1A\u8BBE\u7F6E\u7684\u957F\u4E00\u4E9B\uFF0C\u5BF9\u4E8EaccessToken\uFF0C\u5B83\u7684\u8FC7\u671F\u65F6\u95F4\u975E\u5E38\u77ED\uFF0C\u5373\u4F7F\u88AB\u62E6\u622A\u4E86\u89E3\u5BC6\u4E5F\u9700\u8981\u65F6\u95F4\uFF0C\u800Ctoken\u672C\u8EAB\u4E5F\u5F88\u5FEB\u8FC7\u671F\uFF0C\u8FD9\u6837\u8BBE\u8BA1\u63D0\u5347\u4E86token\u7684\u5B89\u5168\u6027</p><h2 id="\u5B9E\u73B0\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u4EE3\u7801" aria-hidden="true">#</a> \u5B9E\u73B0\u4EE3\u7801</h2><p>\u53CCtoken\u6848\u4F8B</p><p>\u524D\u7AEF\u914D\u7F6E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u524D\u7AEF\u914D\u7F6E</span>
<span class="token comment">// ts\u6587\u4EF6</span>
<span class="token comment">// token\u4EE3\u8868\u7684\u662FAccessToken\uFF0Crefresh_token\u4EE3\u8868\u7684\u662FrefreshToken</span>
<span class="token comment">// \u5C01\u88C5axios</span>
<span class="token keyword">import</span> axios<span class="token punctuation">,</span> <span class="token punctuation">{</span> AxiosError <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getToken<span class="token punctuation">,</span> setToken <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./storage&#39;</span>
<span class="token keyword">import</span> history <span class="token keyword">from</span> <span class="token string">&#39;@/utils/history&#39;</span>
<span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&#39;@/store&#39;</span>
<span class="token keyword">const</span> baseURL <span class="token operator">=</span> <span class="token string">&#39;\xD7\xD7\xD7&#39;</span>
<span class="token keyword">const</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  baseURL<span class="token punctuation">,</span>
  timeout<span class="token operator">:</span> <span class="token number">5000</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u25C6 \u6DFB\u52A0\u8BF7\u6C42\u62E6\u622A\u5668</span>
instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5728\u53D1\u9001\u8BF7\u6C42\u4E4B\u524D\u505A\u4E9B\u4EC0\u4E48</span>
    <span class="token keyword">const</span> token <span class="token operator">=</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>token
    <span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//  \u6CD51\uFF1A\u975E\u7A7A\u65AD\u8A00</span>
      config<span class="token punctuation">.</span>headers<span class="token operator">!</span><span class="token punctuation">.</span>Authorization <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token comment">//  \u6CD52\uFF1A\u7C7B\u578B\u6536\u7A84</span>
    <span class="token comment">//   if (config.headers) {</span>
    <span class="token comment">//     config.headers.Authorization = \`Bearer \${token}\`</span>
    <span class="token comment">//   }</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> config
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5BF9\u8BF7\u6C42\u9519\u8BEF\u505A\u4E9B\u4EC0\u4E48</span>
    <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u25C6 \u6DFB\u52A0\u54CD\u5E94\u62E6\u622A\u5668</span>
instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5BF9\u54CD\u5E94\u6570\u636E\u505A\u70B9\u4EC0\u4E48</span>
    <span class="token keyword">return</span> response
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// test</span>
    <span class="token comment">// console.log(1)</span>
    <span class="token comment">// console.log(error.response, &#39;response&#39;)</span>

    <span class="token keyword">const</span> err <span class="token operator">=</span> error <span class="token keyword">as</span> AxiosError
    <span class="token comment">// console.dir(err, &#39;error&#39;)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">.</span>response<span class="token operator">?.</span>status <span class="token operator">===</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// eslint-disable-next-line no-unused-vars</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> refresh_token <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token comment">// \u5224\u65AD\u662F\u5426\u6709 token</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>refresh_token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> from<span class="token operator">:</span> history<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u83B7\u53D6\u65B0\u7684 token</span>
        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>baseURL <span class="token operator">+</span> <span class="token string">&#39;authorizations&#39;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
          headers<span class="token operator">:</span> <span class="token punctuation">{</span>
            Authorization<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>refresh_token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">// \u4FDD\u5B58\u65B0\u7684 token</span>
        <span class="token keyword">const</span> newtokenInfo <span class="token operator">=</span> <span class="token punctuation">{</span> token<span class="token operator">:</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>token<span class="token punctuation">,</span> refresh_token <span class="token punctuation">}</span>
        <span class="token comment">// \u5B58\u672C\u5730</span>
        <span class="token function">setToken</span><span class="token punctuation">(</span>newtokenInfo<span class="token punctuation">)</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">&#39;refresh_token&#39;</span><span class="token punctuation">)</span>
        <span class="token comment">// \u5B58redux</span>
        store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          type<span class="token operator">:</span> <span class="token string">&#39;login/token&#39;</span><span class="token punctuation">,</span>
          payload<span class="token operator">:</span> newtokenInfo
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">// \u91CD\u53D1\u8BF7\u6C42</span>
        <span class="token keyword">return</span> <span class="token function">instance</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>config<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          pathname<span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>
          state<span class="token operator">:</span> <span class="token punctuation">{</span> from<span class="token operator">:</span> history<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5BF9\u54CD\u5E94\u9519\u8BEF\u505A\u70B9\u4EC0\u4E48</span>
    <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> instance

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540E\u7AEF\u914D\u7F6E</p><ul><li>\u8BF7\u6C42\u5934\u4E2Dpass\u7528\u6765\u63A5\u6536\u5BA2\u6237\u7AEFrefreshToken\uFF0C\u8BF7\u6C42\u5934\u4E2Dauthorization\u7528\u6765\u63A5\u6536\u5BA2\u6237\u7AEFaccessToken</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;koa-router&quot;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> accessToken <span class="token operator">=</span> <span class="token string">&quot;init_s_token&quot;</span><span class="token punctuation">;</span> <span class="token comment">//\u77EDtoken</span>
<span class="token keyword">let</span> refreshToken <span class="token operator">=</span> <span class="token string">&quot;init_l_token&quot;</span><span class="token punctuation">;</span> <span class="token comment">//\u957Ftoken</span>

<span class="token comment">/* 5s\u5237\u65B0\u4E00\u6B21\u77EDtoken */</span>
<span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  accessToken <span class="token operator">=</span> <span class="token string">&quot;s_tk&quot;</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* \u4E00\u5C0F\u65F6\u5237\u65B0\u4E00\u6B21\u957Ftoken */</span>
<span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  refreshToken <span class="token operator">=</span> <span class="token string">&quot;l_tk&quot;</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">600000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* \u767B\u5F55\u63A5\u53E3\u83B7\u53D6\u957F\u77EDtoken */</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">returncode</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    accessToken<span class="token punctuation">,</span>
    refreshToken<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* \u83B7\u53D6\u77EDtoken */</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/refresh&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u63A5\u6536\u7684\u8BF7\u6C42\u5934\u5B57\u6BB5\u90FD\u662F\u5C0F\u5199\u7684</span>
  <span class="token keyword">let</span> <span class="token punctuation">{</span> pass <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>headers<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pass <span class="token operator">!==</span> refreshToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">returncode</span><span class="token operator">:</span> <span class="token number">108</span><span class="token punctuation">,</span>
      <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token string">&quot;\u957Ftoken\u8FC7\u671F\uFF0C\u91CD\u65B0\u767B\u5F55&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">returncode</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      accessToken<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* \u83B7\u53D6\u5E94\u7528\u6570\u636E1 */</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/getData&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token punctuation">{</span> authorization <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>headers<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>authorization <span class="token operator">!==</span> accessToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">returncode</span><span class="token operator">:</span> <span class="token number">104</span><span class="token punctuation">,</span>
      <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token string">&quot;token\u8FC7\u671F&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
      <span class="token literal-property property">returncode</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* \u83B7\u53D6\u5E94\u7528\u6570\u636E2 */</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/getData2&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token punctuation">{</span> authorization <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>headers<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>authorization <span class="token operator">!==</span> accessToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">returncode</span><span class="token operator">:</span> <span class="token number">104</span><span class="token punctuation">,</span>
      <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token string">&quot;token\u8FC7\u671F&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
      <span class="token literal-property property">returncode</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","Login.html.vue"]]);export{r as default};
