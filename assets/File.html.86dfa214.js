import{_ as n,o as s,c as a,e as p}from"./app.bb973a4f.js";const t={},e=p(`<h1 id="\u5927\u6587\u4EF6\u4E0A\u4F20" tabindex="-1"><a class="header-anchor" href="#\u5927\u6587\u4EF6\u4E0A\u4F20" aria-hidden="true">#</a> \u5927\u6587\u4EF6\u4E0A\u4F20</h1><p>\u601D\u8DEF\uFF1A</p><ol><li>\u9996\u5148\u9700\u8981\u5BF9<strong>\u5927\u6587\u4EF6\u8FDB\u884C\u62C6\u5206</strong>\uFF0C\u5373\u4E00\u4E2A\u8BF7\u6C42\u62C6\u5206\u591A\u4E2A\u8BF7\u6C42\uFF0C\u5E76\u4E14\u5C06\u6BCF\u6B21\u62C6\u5206\u7684\u7D22\u5F15\u968F\u7740\u8BF7\u6C42\u4F20\u9012\u5230\u540E\u7AEF\u4E2D\uFF0C\u8BA9\u540E\u7AEF\u6839\u636E\u7D22\u5F15\u6765\u8FDB\u884C\u6587\u4EF6\u5408\u5E76</li><li>\u5728\u6240\u6709\u5207\u7247\u4E0A\u4F20\u5B8C\u6210\u4E4B\u540E\uFF0C\u9700\u8981\u901A\u77E5\u670D\u52A1\u5668\u505A<strong>\u5408\u5E76\u5207\u7247</strong></li><li>\u63A7\u5236\u591A\u4E2A<strong>\u8BF7\u6C42\u7684\u5E76\u53D1</strong>\uFF0C\u9632\u6B62\u5927\u6570\u91CF\u7684\u8BF7\u6C42\u5BFC\u81F4\u670D\u52A1\u5668\u62D2\u7EDD\u8BBF\u95EE\uFF0C\u9020\u6210\u6D4F\u89C8\u5668\u5185\u5B58\u6EA2\u51FA\u7F51\u9875\u5361\u6B7B\u7B49\uFF0C\u9700\u8981\u5BF9\u8BF7\u6C42\u8FDB\u884C\u5E76\u53D1\u6570\u91CF\u7684\u63A7\u5236</li><li><strong>\u65AD\u70B9\u7EED\u4F20</strong>\uFF0C\u5F53\u591A\u4E2A\u8BF7\u6C42\u4E2D\u6709\u8BF7\u6C42\u53D1\u9001\u5931\u8D25\u7684\u65F6\u5019\uFF0C\u6216\u8005\u662F\u5728\u4F20\u9012\u7684\u8FC7\u7A0B\u4E2D\u53D1\u751F\u7F51\u7EDC\u5F02\u5E38\u7B49\uFF0C\u9700\u8981\u5BF9\u5931\u8D25\u7684\u8BF7\u6C42\u505A\u5904\u7406\u8BB0\u5F55\uFF0C\u8BA9\u4E0B\u4E00\u6B21\u7684\u53D1\u9001\u53EA\u53D1\u9001\u672A\u6210\u529F\u4E0A\u4F20\u7684\u5207\u7247\u6587\u4EF6</li><li><strong>\u6587\u4EF6\u79D2\u4F20</strong>\uFF0C\u5373\u8D44\u6E90\u670D\u52A1\u5668\u4E2D\u5DF2\u7ECF\u6709\u8BE5\u6587\u4EF6\u4E86\uFF0C\u5176\u4ED6\u4EBA\u4E0A\u4F20\u7684\u65F6\u5019\u76F4\u63A5\u8FD4\u56DE\u5176URL</li></ol><h2 id="\u5B9E\u73B0\u4EE3\u7801-v3\u4E3A\u6A21\u677F" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u4EE3\u7801-v3\u4E3A\u6A21\u677F" aria-hidden="true">#</a> \u5B9E\u73B0\u4EE3\u7801\uFF08V3\u4E3A\u6A21\u677F\uFF09</h2><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>change<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>upload<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u4E0A\u4F20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u83B7\u53D6input\u6846\u4E2D\u7684\u6587\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> file
<span class="token keyword">const</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   <span class="token keyword">const</span> target <span class="token operator">=</span> e<span class="token punctuation">.</span>target
   <span class="token keyword">if</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     file <span class="token operator">=</span> target<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u662F\u8BBE\u7F6E\u4E0A\u4F20\u6309\u94AE\uFF0C\u5728\u56DE\u8C03\u4E8B\u4EF6\u4E2D\u8FDB\u884C\u6587\u4EF6\u4E0A\u4F20</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">const</span> <span class="token function-variable function">upload</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">)</span> <span class="token keyword">return</span> 

      <span class="token keyword">let</span> size <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">10</span>  <span class="token comment">// \u5207\u7247\u5927\u5C0F</span>
      <span class="token keyword">let</span> fileChunks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment">//\u5207\u7247\u96C6</span>
      <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment">//\u5207\u7247\u5E8F\u53F7</span>

      <span class="token comment">// \u5F00\u59CB\u5207\u7247</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>start <span class="token operator">&lt;</span> file<span class="token punctuation">.</span>size<span class="token punctuation">;</span> start <span class="token operator">+=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fileChunks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">hash</span><span class="token operator">:</span> index<span class="token operator">++</span><span class="token punctuation">,</span>
          <span class="token literal-property property">chunk</span><span class="token operator">:</span> file<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span>start <span class="token operator">+</span> size<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// \u5E76\u53D1\u63A7\u5236\u548C\u65AD\u70B9\u7EED\u4F20</span>
      <span class="token keyword">const</span> <span class="token function-variable function">uploadFileChunks</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">list</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u53D1\u9001\u4FE1\u606F\u63D0\u9192\u670D\u52A1\u5668-\u6240\u6709\u5207\u7247\u53D1\u9001\u5B8C\u6210</span>
          <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/merge&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token literal-property property">filename</span><span class="token operator">:</span> file<span class="token punctuation">.</span>name
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token keyword">return</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u5E76\u53D1\u4E0A\u4F20\u6570\u636E</span>
        <span class="token keyword">let</span> netpool <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment">//\u8BF7\u6C42\u5E76\u53D1\u6C60</span>
        <span class="token keyword">let</span> maxNum <span class="token operator">=</span> <span class="token number">3</span>  <span class="token comment">//\u6700\u5927\u5E76\u53D1\u6570</span>
        <span class="token keyword">let</span> finish <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment">//\u5B8C\u6210\u7684\u6570\u91CF</span>
        <span class="token keyword">let</span> failList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment">//\u5931\u8D25\u5217\u8868</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>list<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">let</span> item <span class="token operator">=</span> list<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
          <span class="token keyword">let</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;filename&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
          formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">,</span>item<span class="token punctuation">.</span>hash<span class="token punctuation">)</span>
          formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;chunk&#39;</span><span class="token punctuation">,</span>item<span class="token punctuation">.</span>chunk<span class="token punctuation">)</span>
          

          <span class="token comment">// \u6784\u5EFAPromise</span>
          <span class="token keyword">let</span> task <span class="token operator">=</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/upload&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> formData
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u670D\u52A1\u7AEF\u5B58\u5728\u5F53\u524D\u6587\u4EF6\uFF0C\u5219\u8FD4\u56DE\u79D2\u4F20\u6548\u679C</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>isExistFile<span class="token punctuation">)</span><span class="token punctuation">{</span>
              <span class="token keyword">return</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u6BCF\u5B8C\u6210\u4E00\u6B21\u5C31\u5C06\u8BE5\u6B21\u4EFB\u52A1\u5728\u5E76\u53D1\u6C60\u4E2D\u5220\u9664</span>
            <span class="token keyword">let</span> index <span class="token operator">=</span> netpool<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token operator">=&gt;</span> t<span class="token operator">===</span>task<span class="token punctuation">)</span>
            netpool<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5C06\u5931\u8D25\u4E0A\u4F20\u7684\u5207\u7247\u8BB0\u5F55\u5230\u5931\u8D25\u5217\u8868\u4E2D</span>
            failList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            finish<span class="token operator">++</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>finish <span class="token operator">===</span> list<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> failList <span class="token operator">!==</span><span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
              <span class="token function">uploadFileChunks</span><span class="token punctuation">(</span>failList<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>

          <span class="token comment">// \u5C06\u4EFB\u52A1\u52A0\u5165\u5E76\u53D1\u6C60\u4E2D</span>
          netpool<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span>
          <span class="token comment">// \u5F53\u5E76\u53D1\u6C60\u6EE1\u4E86\uFF0C\u5C31\u5F00\u59CB\u7528race\u53D1\u9001\uFF0C\u6CE8\u610F\uFF0C\u8BF7\u6C42\u53D1\u9001\u662F\u5728\u8FD9\u91CC\uFF0C\u4F46\u662F\u53D1\u9001\u4E0D\u662F\u5728for\u5FAA\u73AF\u4E2D</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span>netpool<span class="token punctuation">.</span>length <span class="token operator">===</span> maxNum<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span>netpool<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token function">uploadFileChunks</span><span class="token punctuation">(</span>fileChunks<span class="token punctuation">)</span>

    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u5927\u81F4\u7684\u6D41\u7A0B\u5982\u4E0B\uFF1A</p><ol><li>\u83B7\u53D6\u9700\u8981\u4E0A\u4F20\u7684\u6587\u4EF6</li><li>\u6587\u4EF6\u5207\u7247\u540E\u5B58\u5165\u6570\u7EC4\u4E2D</li><li>\u904D\u5386\u5207\u7247\u6570\u7EC4\u6765\u751F\u6210\u5BF9\u5E94\u6587\u4EF6\u7684hash\uFF08\u975E\u5FC5\u987B\uFF09</li><li>\u6839\u636E\u6587\u4EF6\u5207\u7247\u5217\u8868\u548C\u5BF9\u5E94\u7684hash\u751F\u6210\u8BF7\u6C42\u5217\u8868</li><li>\u5E76\u53D1\u9650\u5236\u5904\u7406\u8BF7\u6C42</li><li>\u5F85\u6240\u6709\u8BF7\u6C42\u5B8C\u6210\u540E\u53D1\u9001\u5408\u5E76\u8BF7\u6C42</li></ol><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u5728\u4E0A\u4F20\u7684\u8FC7\u7A0B\u4E2D\u4E5F\u53EF\u4EE5\u901A\u8FC7md5\u52A0\u5BC6\u5207\u7247\u6765\u786E\u4FDD\u5B89\u5168\u6027\u3002</p><p>\u5176\u6B21\uFF0C\u5E38\u8BF4\u7684\u65AD\u70B9\u4E0A\u4F20\u5B9E\u9645\u4E0A\u5C31\u662F\u6682\u505C\u4E0A\u4F20\u548C\u6062\u590D\u4E0A\u4F20\uFF0C<strong>\u6682\u505C\u4E0A\u4F20</strong>\u5C31\u662F\u5C06\u5B8C\u6210\u53D1\u9001\u8BF7\u6C42\u7684\u5207\u7247\u4ECE\u6570\u7EC4\u4E2D\u53BB\u9664\uFF0C\u8FD9\u6837\u6570\u7EC4\u4E2D\u5C31\u53EA\u4FDD\u7559\u4E86\u4E0A\u4F20\u4E2D\u7684\u6587\u4EF6\uFF0C\u5728\u4E2D\u65AD\u8BF7\u6C42\u4E2D\u53EF\u4EE5\u4F7F\u7528<code>axios</code>\u4E2D\u7684<code>AbortController</code></p><p><strong>\u6062\u590D\u4E0A\u4F20</strong>\u5C31\u662F\u5728\u4E0A\u4F20\u5207\u7247\u4E4B\u524D\uFF0C\u5148\u5411\u540E\u7AEF\u8BF7\u6C42\u4E0B\u5DF2\u4E0A\u4F20\u7684\u5207\u7247\u5217\u8868\uFF0C\u62FF\u5230\u540E\u5BF9\u8981\u4E0A\u4F20\u7684\u5207\u7247\u5217\u8868\u8FDB\u884C\u8FC7\u6EE4\uFF0C\u53EA\u4E0A\u4F20\u672A\u4E0A\u4F20\u7684\u5207\u7247</p><p><strong>\u79D2\u4F20</strong>\u5B9E\u9645\u4E0A\u5C31\u662F\u5728\u524D\u7AEF\u53D1\u9001\u5B8C\u8BF7\u6C42\u540E\u540E\u7AEF\u4F18\u5148\u5224\u65ADhash\uFF0C\u6839\u636Ehash\u5224\u65AD\u662F\u5426\u6709\u8BE5\u6587\u4EF6\uFF0C\u5982\u679C\u6709\u5219\u8FD4\u56DE\u6D88\u606F\u63D0\u9192\u524D\u7AEF\u79D2\u4F20\u6210\u529F</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u4E00\u822C\u7684\u5207\u7247\u662F\u6839\u636E\u6587\u4EF6\u540D+\u5207\u7247\u4E0B\u6807\u4F5C\u4E3A\u5207\u7247\u7684hash\uFF0C\u8FD9\u6837\u4E00\u65E6\u6587\u4EF6\u540D\u53D1\u751F\u6539\u53D8\u5C31\u5931\u53BB\u6548\u679C\u4E86\uFF0C\u505A\u6CD5\u5E94\u8BE5\u662F\u6839\u636E\u6587\u4EF6\u5185\u5BB9\u751F\u6210hash\uFF0C\u8FD9\u91CC\u662F\u4F7F\u7528MD5\u7684\u52A0\u5BC6\u751F\u6210hash</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// /public/hash.js</span>
self<span class="token punctuation">.</span><span class="token function">importScripts</span><span class="token punctuation">(</span><span class="token string">&quot;/spark-md5.min.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5BFC\u5165\u811A\u672C</span>

<span class="token comment">// \u751F\u6210\u6587\u4EF6 hash</span>
self<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> fileChunkList <span class="token punctuation">}</span> <span class="token operator">=</span> e<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
  <span class="token keyword">const</span> spark <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">self<span class="token punctuation">.</span>SparkMD5<span class="token punctuation">.</span>ArrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> percentage <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">loadNext</span> <span class="token operator">=</span> <span class="token parameter">index</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u65B0\u5EFA\u8BFB\u53D6\u5668</span>
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BBE\u5B9A\u8BFB\u53D6\u6570\u636E\u683C\u5F0F\u5E76\u5F00\u59CB\u8BFB\u53D6</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsArrayBuffer</span><span class="token punctuation">(</span>fileChunkList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u76D1\u542C\u8BFB\u53D6\u5B8C\u6210</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      count<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token comment">// \u83B7\u53D6\u8BFB\u53D6\u7ED3\u679C\u5E76\u4EA4\u7ED9spark\u8BA1\u7B97hash</span>
      spark<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">===</span> fileChunkList<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        self<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">percentage</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
          <span class="token comment">// \u83B7\u53D6\u6700\u7EC8hash</span>
          <span class="token literal-property property">hash</span><span class="token operator">:</span> spark<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        self<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        percentage <span class="token operator">+=</span> <span class="token number">100</span> <span class="token operator">/</span> fileChunkList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        self<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          percentage
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u9012\u5F52\u8BA1\u7B97\u4E0B\u4E00\u4E2A\u5207\u7247</span>
        <span class="token function">loadNext</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">loadNext</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u540E\u7AEF\u4EE3\u7801-node" tabindex="-1"><a class="header-anchor" href="#\u540E\u7AEF\u4EE3\u7801-node" aria-hidden="true">#</a> \u540E\u7AEF\u4EE3\u7801\uFF08Node\uFF09</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u6587\u4EF6\u5206\u7247\u4E0A\u4F20</span>
<span class="token keyword">const</span> koaRouter <span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> router <span class="token operator">=</span><span class="token function">koaRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">prefix</span><span class="token operator">:</span><span class="token string">&#39;/bxg&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> multer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-multer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> upload <span class="token operator">=</span> <span class="token function">multer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dest</span><span class="token operator">:</span> <span class="token string">&#39;upload/&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token comment">//\u5F00\u542Fhttp\u957F\u94FE\u63A5</span>
router<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;X-Powered-By&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span>
    ctx<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;connection&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;keep-alive&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/upload_file&#39;</span><span class="token punctuation">,</span>upload<span class="token punctuation">.</span><span class="token function">single</span><span class="token punctuation">(</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token comment">// console.log(ctx.req.file.destination)</span>

    <span class="token keyword">var</span> reg<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">([\\/])</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gm</span></span>

    <span class="token keyword">var</span> fileFragmentHashName<span class="token operator">=</span>ctx<span class="token punctuation">.</span>req<span class="token punctuation">.</span>file<span class="token punctuation">.</span>destination<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&#39;\\\\&#39;</span><span class="token operator">+</span>ctx<span class="token punctuation">.</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>fileHashName <span class="token comment">//\u7247\u6BB5\u6587\u4EF6hash\u540D\u79F0</span>

    fs<span class="token punctuation">.</span><span class="token function">renameSync</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>req<span class="token punctuation">.</span>file<span class="token punctuation">.</span>path<span class="token punctuation">,</span>fileFragmentHashName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u4FEE\u6539\u56FE\u7247\u4E4B\u524D\u7684\u540D\u5B57</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>isFinal<span class="token operator">===</span><span class="token string">&#39;true&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>isFinal<span class="token punctuation">)</span>
        <span class="token keyword">await</span> <span class="token function">ParseMergeFiles</span><span class="token punctuation">(</span>fileFragmentHashName<span class="token punctuation">,</span>ctx<span class="token punctuation">.</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>Hash<span class="token punctuation">,</span>ctx<span class="token punctuation">.</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>suffix<span class="token punctuation">,</span>ctx<span class="token punctuation">.</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>fileName<span class="token punctuation">)</span>
        ctx<span class="token punctuation">.</span>body<span class="token operator">=</span><span class="token punctuation">{</span>
            <span class="token literal-property property">code</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token literal-property property">msg</span><span class="token operator">:</span>ctx<span class="token punctuation">.</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>fileName<span class="token operator">+</span><span class="token string">&#39;\u4E0A\u4F20\u6210\u529F&#39;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>body<span class="token operator">=</span><span class="token punctuation">{</span>
            <span class="token literal-property property">code</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token literal-property property">msg</span><span class="token operator">:</span>ctx<span class="token punctuation">.</span>req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>fileName<span class="token operator">+</span><span class="token string">&#39;\u7684\u6587\u4EF6\u5206\u7247\u4E0A\u4F20\u6210\u529F&#39;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>



<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//\u51C6\u5907\u5408\u5E76\u5927\u6587\u4EF6</span>

<span class="token comment">//\u7B2C\u4E00\u6B65\u62FF\u5230\u6240\u6709\u7684\u6587\u4EF6\u7247\u6BB5\u5BF9\u8C61\u8FDB\u884C\u5FAA\u73AF \u4E00\u4E2A\u4E2A\u5199\u5165\u4E00\u4E2A\u65B0\u5EFA\u7684\u6587\u4EF6</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">ParseMergeFiles</span><span class="token punctuation">(</span><span class="token parameter">fileFragmentHashName<span class="token punctuation">,</span>Hash<span class="token punctuation">,</span>suffix<span class="token punctuation">,</span>fileName</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>

       <span class="token keyword">var</span> fileFragmentHashNameCount<span class="token operator">=</span><span class="token number">0</span> <span class="token comment">//\u6587\u4EF6\u7247\u6BB5\u6570\u91CF</span>
       <span class="token keyword">var</span> reg<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\_([\\d\\D]+)\\.([\\d\\D]+)$</span><span class="token regex-delimiter">/</span></span>
		
		<span class="token comment">//\u6211\u8FD9\u91CC\u5C06\u6587\u4EF6\u5199\u5165resource_upload\u76EE\u5F55\u4E0B\uFF0C\u81EA\u884C\u6839\u636E\u9700\u8981\u8FDB\u884C\u8C03\u6574</span>
       <span class="token keyword">const</span> fileWriteStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">&#39;resource_upload&#39;</span><span class="token operator">+</span><span class="token string">&#39;\\\\&#39;</span><span class="token operator">+</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u53EF\u5199\u6D41</span>
       fileFragmentHashNameCount<span class="token operator">=</span>reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>fileFragmentHashName<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>


       <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>fileFragmentHashNameCount<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

           <span class="token keyword">var</span>  newfileFragmentHashName<span class="token operator">=</span>fileFragmentHashName<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">$1<span class="token punctuation">,</span>$2<span class="token punctuation">,</span>$3</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
               <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>$3<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
           <span class="token punctuation">}</span><span class="token punctuation">)</span>

           <span class="token keyword">const</span> res<span class="token operator">=</span> <span class="token keyword">await</span>  <span class="token function">mergeFiles</span><span class="token punctuation">(</span>fileWriteStream<span class="token punctuation">,</span>fileName<span class="token punctuation">,</span>newfileFragmentHashName<span class="token punctuation">)</span>

       <span class="token punctuation">}</span>
       fileWriteStream<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
       <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>

<span class="token comment">//\u5F00\u59CB\u5408\u5E76</span>
<span class="token keyword">function</span> <span class="token function">mergeFiles</span><span class="token punctuation">(</span><span class="token parameter">fws<span class="token punctuation">,</span>fileName<span class="token punctuation">,</span>newfileFragmentHashName</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

        <span class="token keyword">var</span> rs <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>newfileFragmentHashName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fws<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>


            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;xx&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports<span class="token operator">=</span>router
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","File.html.vue"]]);export{r as default};
